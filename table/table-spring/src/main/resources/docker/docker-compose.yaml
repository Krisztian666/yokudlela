version: '3.8'
services:
  table:
    image: krisztian4dsoft/yokudlela:latest
    environment:
      - KEYCLOAK_AUTH_SERVER_URL=http://yokudlela:6080/auth
      - SPRING_LIQUIBASE_ENABLED=true
      - SPRING_DATASOURCE_URL=jdbc:mysql://yokudlela:3306/service_table?useUnicode=true&characterEncoding=UTF-8&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    logging:
      driver: gelf
      options:
        gelf-address: "udp://yokudlela:12201"

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 9000:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_DB=db
  db:
    image: mariadb:10.1.34
    environment:
      PROXY_ADDRESS_FORWARDING: 'true'
      MYSQL_ROOT_PASSWORD: yokudlela
#      MYSQL_DATABASE: keycloak
#      MYSQL_USER: yokudlela
#      MYSQL_PASSWORD: yokudlela
    ports:
      - '3306:3306'
    restart: on-failure
    volumes:
     - ${PWD}/../../disks/sql:/var/lib/mysql
     - "${PWD}/init-db/iam.sql:/docker-entrypoint-initdb.d/1.sql:ro"
     - "${PWD}/init-db/table-service.sql:/docker-entrypoint-initdb.d/2.sql:ro"
    healthcheck:  
      test: ["CMD-SHELL", "mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
# docker inspect --format "{{json .State.Health }}" container_id      

  keycloak:
    image: jboss/keycloak:12.0.4
    ports:
      - "6080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: yokudlela
      DB_VENDOR: mariadb
      DB_USER: iam
      DB_PASSWORD: iam
      DB_ADDR: db
      DB_DATABASE: iam
      DB_PORT: 3306
      KEYCLOAK_IMPORT: /tmp/example-realm.json
    volumes:
      - ${PWD}/realm-export.json:/tmp/example-realm.json
    depends_on:
      db:
         condition: service_healthy
    links: 
        - db
  cache:
    image: redis:6.2.6
    ports:
      - "6379:6379"

  # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
   image: mongo:4.2
   volumes:
    - ${PWD}/../../disks/mongo:/data/db
#      networks:
#        - graylog
    # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${PWD}/../../disks/elastic:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
#      networks:
#        - graylog

    # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:4.2
    environment:
        # CHANGE ME (must be at least 16 characters)!
        - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
        # Password: admin
        - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
        - GRAYLOG_HTTP_EXTERNAL_URI=http://yokudlela:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
#      networks:
#        - graylog
#      restart: always
    depends_on:
        - mongo
        - elasticsearch
    ports:
        # Graylog web interface and REST API
        - 9000:9000
        # Syslog TCP
        - 1514:1514
        # Syslog UDP
        - 1514:1514/udp
        # GELF TCP
        - 12201:12201
        # GELF UDP
        - 12201:12201/udp
#  networks:
#    graylog:
#      driver: bridge
